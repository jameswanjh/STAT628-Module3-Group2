sin(pi/2); cos(pi/2); tan(pi/2) #using radian, not degree; output: too small/large
abs(4); abs (-4); abs(0)
sqrt(4); sqrt(-4); 4/0 #NaN, Inf? Undefined values
floor(2.5); floor(-2.5)
8 / 3; 8 %/% 3
8 / (-3); 8 %/% (-3)
ceiling(2.5); ceiling(-2.5)
round(8000/3, 5)
round(8000/3, 0); round(8000/3, -2)
round(8000/3, 5)
round(1/3,2)
round(1/3,3)
round(1/3,5)
round(8000/3,5)
round(8000/3,4)
round(8000/3,1)
round(8000/3,5)
round(8000/3, 0); round(8000/3, -2)
round(-1.5); round(1.5)
round(-0.5); round(0.5)
?round
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(0.15, 1)
round(.5 + -2:4)
1006^(1/3)
1006/12
1006 %/% 12
1006 %% 12
log(1006, 12)
round(15.064)
floor(10.825)
pnorm(12.7, 13, 6)
qnorm(0.6, 13, 6)
?pt
pt(0,9)
?qt
qt(0.04,9)
qt(0.08,9)
qt(0.08,9)
?qnorm
?dbinom
dbinom(12,25,0.46)
pbinom(12,25,0.46)
?qt
qt(0.08,9)
qt(0.96,9)
qt(0.92,9)
qt(0.96,9)
packageVersion("shiny")
install.packages("shiny")
packageVersion("shiny")
shiny::runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
?numericInput
?numericInput
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
?renderText
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp()
runApp()
runApp()
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/bodyFat')
shiny::runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
?numericInput
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
runApp('Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 2/STAT628-Module2-Group9/Codes')
setwd("~/Library/Mobile Documents/com~apple~CloudDocs/UW-Madison/Graduate/Fall 2022/STAT 628/Module 3/STAT628-Module3-Group2")
# read cleaned reviews file of ice-cream business in
review = read.csv("Data/icecream_review.csv")
# filter the fields we need
text = tibble(line = 1:151330, text = review$text, stars = review$stars, useful = review$useful, funny = review$funny, cool = review$cool)
library("rjson")
library(tidytext)
library(tidyr)
library("tm")
library("SnowballC")
library("wordcloud")
library(ggplot2)
library(tidyverse)
library(scales)
# filter the fields we need
text = tibble(line = 1:151330, text = review$text, stars = review$stars, useful = review$useful, funny = review$funny, cool = review$cool)
# tokenize each review into single words
words = text %>% unnest_tokens(word, text)
# eliminate stop words
data(stop_words)
words <- words %>% anti_join(stop_words)
# count word appearance in each review
word_freq = words %>% count(line, stars, useful, funny, cool, word)
View(words)
View(word_freq)
View(word_freq)
# change column names to make more sense
colnames(word_freq)[1] = "review"
colnames(word_freq)[7] = "count"
# flavor list searched online
flavor = c('banana', 'bubblegum', 'butter', 'butterscotch', 'pecan', 'chocolate',
'cheese', 'cake', 'cherry', 'cookie', 'coffee', 'cinnamon', 'apple',
'candy', 'vanilla', 'eggnog', 'grape', 'tea', 'mamey', 'mango',
'maple', 'mint', 'neapolitan', 'pistachio', 'peanut', 'blueberry',
'raspberry', 'marshmallows', 'strawberry', 'watermelon', 'melon', 'ube',
'taro', 'matcha', 'caramel', 'tiramisu', 'rum', 'praline', 'berry',
'sugar', 'chili', 'chilli', 'cranberry', 'cucumber', 'hazelnut', 'kiwi',
'honey', 'lavendar', 'lemon', 'lime', 'lychee', 'mocha', 'oreo', 'passionfruit',
'peach', 'peppermint', 'plum', 'toffee', 'sherbet', 'rose', 'pumpkin',
'pear', 'pineapple', 'salt', 'almond', 'yogurt', 'coconut')
# type list searched online
type = c('cone', 'sundae', 'shakes', 'shake', 'smoothie', 'slush', 'waffle', 'sherbet', 'sorbet', 'yogurt', 'gelato')
# show the word appearance related to flavors & types in each review
flavor_words = word_freq %>%
filter(word %in% flavor) %>%
pivot_wider(names_from=word,values_from=count, values_fill = 0)
View(flavor_words)
#write.csv(flavor_words,"flavor_word_freq_per_review.csv")
type_words = word_freq %>%
filter(word %in% type) %>%
pivot_wider(names_from=word,values_from=count, values_fill = 0)
# count and sort the total word appearances related to each flavor & type in all reviews as a whole
flavors_total = as.matrix(sort(colSums(flavor_words[, -c(1:5)]), decreasing = TRUE))
names(flavors_total) = flavor
colnames(flavors_total)[1] = "total"
types_total = as.matrix(sort(colSums(type_words[, -c(1:5)]), decreasing = TRUE))
names(types_total) = type
colnames(types_total)[1] = "total"
# visualize the distribution of star ratings for each flavor & type
flavors = word_freq %>% filter(word %in% flavor)
View(flavors_total)
View(flavors)
View(type_words)
View(types_total)
View(word_freq)
View(review)
View(types_total)
View(word_freq)
View(review)
