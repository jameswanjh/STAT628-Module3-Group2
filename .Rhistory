View(freq_words)
freq_words = words %>%
count(line, word, sort = TRUE)
View(freq_words)
freq_words = words %>%
count(line, word)
View(freq_words)
total_words <- freq_words %>%
summarize(total = sum(n))
View(total_words)
total_words <- freq_words %>%
group_by(book) %>%
summarize(total = sum(n))
total_words <- freq_words %>%
group_by(line) %>%
summarize(total = sum(n))
View(total_words)
gc()
review = read.csv("Data/icecream_review.csv")
text = tibble(line = 1:151330, text = review$text)
words = text %>%
unnest_tokens(word, text)
data(stop_words)
force(stop_words)
words <- words %>%
anti_join(stop_words)
freq_words = words %>%
count(line, word)
View(freq_words)
colnames(freq_words)[1] = "review"
View(freq_words)
words %>% pivot_wider(names_from = word, values_from = n)
library(tidyr)
freq_words %>% pivot_wider(names_from = word, values_from = n)
colnames(freq_words)[3] = "count"
View(freq_words)
freq_words %>% pivot_wider(names_from = word, values_from = count)
freq_words[1:100, ] %>% pivot_wider(names_from = word, values_from = count)
freq_words[1:100, ] %>% pivot_wider(names_from = word, values_from = count, values_fill = 0)
freq_words %>% pivot_wider(names_from = word, values_from = count, values_fill = 0)
View(stop_words)
View(text)
View(words)
flavor = c('banana')
flavor = c('banana', 'chocolate')
freq_words %>% filter(word %in% flavor)
View(review)
flavor = c('banana', 'bubblegum', 'butter', 'butterscotch', 'pecan', 'chocolate',
'cheese', 'cake', 'cherry', 'cookie', 'coffee', 'cinnamon', 'apple',
'candy', 'vanilla', 'eggnog', 'grape', 'tea', 'lucuma', 'mamey', 'mango',
'maple', 'mint', 'neapolitan', 'pistachio', 'peanut', 'blueberry',
'raspberry', 'marshmallows', 'strawberry', 'watermelon', 'melon', 'ube',
'taro', 'matcha', 'caramel', 'tiramisu', 'rum', 'praline', 'berry',
'sugar', 'chili', 'chilli', 'cranberry', 'cucumber', 'hazelnut', 'kiwi',
'honey', 'lavendar', 'lemon', 'lime', 'lychee', 'mocha', 'oreo', 'passionfruit',
'peach', 'peppermint', 'plum', 'toffee', 'sherbet', 'rose', 'pumpkin',
'pear', 'pineapple', 'salt', 'custard', 'almond')
freq_words %>% filter(word %in% flavor)
flavor = c('banana', 'bubblegum', 'butter', 'butterscotch', 'pecan', 'chocolate',
'cheese', 'cake', 'cherry', 'cookie', 'coffee', 'cinnamon', 'apple',
'candy', 'vanilla', 'eggnog', 'grape', 'tea', 'lucuma', 'mamey', 'mango',
'maple', 'mint', 'neapolitan', 'pistachio', 'peanut', 'blueberry',
'raspberry', 'marshmallows', 'strawberry', 'watermelon', 'melon', 'ube',
'taro', 'matcha', 'caramel', 'tiramisu', 'rum', 'praline', 'berry',
'sugar', 'chili', 'chilli', 'cranberry', 'cucumber', 'hazelnut', 'kiwi',
'honey', 'lavendar', 'lemon', 'lime', 'lychee', 'mocha', 'oreo', 'passionfruit',
'peach', 'peppermint', 'plum', 'toffee', 'sherbet', 'rose', 'pumpkin',
'pear', 'pineapple', 'salt', 'custard', 'almond', 'yogurt')
freq_words %>% filter(word %in% flavor)
View(freq_words)
flavor_words = freq_words %>% filter(word %in% flavor) %>% pivot_wider(names_from=word,values_from=count)
View(flavor_words)
flavor_words = freq_words %>%
filter(word %in% flavor) %>%
pivot_wider(names_from=word,values_from=count, values_fill = 0)
View(flavor_words)
freq_flavors = colSums(flavor_words[, -1])
names(freq_falvors) = flavor
names(freq_flavors) = flavor
sort(freq_flavors)[1:10]
sort(-freq_flavors)[1:10]
-sort(-freq_flavors)[1:10]
?sort
sort(freq_flavors, decreasing = TRUE)[1:10]
sort(freq_flavors, decreasing = TRUE)
flavor = c('banana', 'bubblegum', 'butter', 'butterscotch', 'pecan', 'chocolate',
'cheese', 'cake', 'cherry', 'cookie', 'coffee', 'cinnamon', 'apple',
'candy', 'vanilla', 'eggnog', 'grape', 'tea', 'lucuma', 'mamey', 'mango',
'maple', 'mint', 'neapolitan', 'pistachio', 'peanut', 'blueberry',
'raspberry', 'marshmallows', 'strawberry', 'watermelon', 'melon', 'ube',
'taro', 'matcha', 'caramel', 'tiramisu', 'rum', 'praline', 'berry',
'sugar', 'chili', 'chilli', 'cranberry', 'cucumber', 'hazelnut', 'kiwi',
'honey', 'lavendar', 'lemon', 'lime', 'lychee', 'mocha', 'oreo', 'passionfruit',
'peach', 'peppermint', 'plum', 'toffee', 'sherbet', 'rose', 'pumpkin',
'pear', 'pineapple', 'salt', 'almond', 'yogurt')
flavor_words = freq_words %>%
filter(word %in% flavor) %>%
pivot_wider(names_from=word,values_from=count, values_fill = 0)
freq_flavors = colSums(flavor_words[, -1])
names(freq_flavors) = flavor
sort(freq_flavors, decreasing = TRUE)
library("tm")
library("SnowballC")
library("wordcloud")
text=as.matrix(c(214,1233,23,314),nrow=4)
rownames(text)=c('apple','banana','grasp','peach')
dev.new(width = 1000, height = 1000, unit = "px")
wordcloud(rownames(text),
text, min.freq =3, scale=c(5, .2),
random.order = FALSE,
random.color = FALSE,
colors= c("indianred1","indianred2","indianred3","indianred"))
library("tm")
library("SnowballC")
library("wordcloud")
View(flavor_words)
# dev.new(width = 1000, height = 1000, unit = "px")
wordcloud(rownames(freq_flavors),
freq_flavors, min.freq =3, scale=c(5, .2),
random.order = FALSE,
random.color = FALSE)
dev.new(width = 1000, height = 1000, unit = "px")
wordcloud(rownames(freq_flavors),
freq_flavors, min.freq =3, scale=c(5, .2),
random.order = FALSE,
random.color = FALSE)
wordcloud(rownames(freq_flavors),
freq_flavors, min.freq =3, scale=c(5, .2),
random.order = FALSE,
random.color = TRUE)
freq_flavors = as.matrix(colSums(flavor_words[, -1]))
names(freq_flavors) = flavor
sort(freq_flavors, decreasing = TRUE)
dev.new(width = 1000, height = 1000, unit = "px")
wordcloud(rownames(freq_flavors),
freq_flavors, min.freq =3, scale=c(5, .2),
random.order = FALSE,
random.color = TRUE)
dev.new(width = 1000, height = 1000, unit = "px")
wordcloud(rownames(freq_flavors),
freq_flavors, min.freq =3, scale=c(5, .2),
random.order = FALSE,
random.color = TRUE)
View(review)
View(flavor_words)
View(review)
View(review)
View(freq_words)
View(freq_flavors)
View(freq_words)
text = tibble(line = 1:151330, text = review$text, stars = review$stars)
View(text)
words = text %>%
unnest_tokens(word, text)
View(words)
data(stop_words)
words <- words %>%
anti_join(stop_words)
View(words)
View(freq_words)
View(words)
word_freq = words %>%
count(line, word)
View(word_freq)
word_freq = words %>%
count(line, stars, word)
View(word_freq)
colnames(word_freq)[1] = "review"
colnames(word_freq)[3] = "count"
word_freq %>% pivot_wider(names_from = word, values_from = count, values_fill = 0)
gc()
review = read.csv("Data/icecream_review.csv")
View(review)
text = tibble(line = 1:151330, text = review$text, stars = review$stars, useful = review$useful, funny = review$funny, cool = review$cool)
View(text)
words = text %>%
unnest_tokens(word, text)
View(words)
data(stop_words)
words <- words %>%
anti_join(stop_words)
View(words)
word_freq = words %>%
count(line, stars, useful, fuuny, cool, word)
word_freq = words %>%
count(line, stars, useful, funny, cool, word)
View(word_freq)
colnames(word_freq)[1] = "review"
colnames(word_freq)[7] = "count"
View(word_freq)
word_freq_per_review = word_freq %>% pivot_wider(names_from = word, values_from = count, values_fill = 0)
word_freq %>% pivot_wider(names_from = word, values_from = count, values_fill = 0)
flavor = c('banana', 'bubblegum', 'butter', 'butterscotch', 'pecan', 'chocolate',
'cheese', 'cake', 'cherry', 'cookie', 'coffee', 'cinnamon', 'apple',
'candy', 'vanilla', 'eggnog', 'grape', 'tea', 'lucuma', 'mamey', 'mango',
'maple', 'mint', 'neapolitan', 'pistachio', 'peanut', 'blueberry',
'raspberry', 'marshmallows', 'strawberry', 'watermelon', 'melon', 'ube',
'taro', 'matcha', 'caramel', 'tiramisu', 'rum', 'praline', 'berry',
'sugar', 'chili', 'chilli', 'cranberry', 'cucumber', 'hazelnut', 'kiwi',
'honey', 'lavendar', 'lemon', 'lime', 'lychee', 'mocha', 'oreo', 'passionfruit',
'peach', 'peppermint', 'plum', 'toffee', 'sherbet', 'rose', 'pumpkin',
'pear', 'pineapple', 'salt', 'almond', 'yogurt')
flavor_words = freq_words %>%
filter(word %in% flavor) %>%
pivot_wider(names_from=word,values_from=count, values_fill = 0)
flavor_words = word_freq %>%
filter(word %in% flavor) %>%
pivot_wider(names_from=word,values_from=count, values_fill = 0)
View(flavor_words)
freq_flavors = as.matrix(colSums(flavor_words[, -1]))
names(freq_flavors) = flavor
sort(freq_flavors, decreasing = TRUE)
library(ggplot2)
flavors = word_freq %>% filter(word %in% flavor)
View(flavors)
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram(aes(y = stat(density))) +
scale_fill_viridis(discrete=TRUE) +
scale_color_viridis(discrete=TRUE) +theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram(aes(y = stat(density))) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
dev.new(width = 1000, height = 1000, unit = "px")
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram(aes(y = stat(density))) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram() + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
type = c('cone', 'sundae', 'shakes', 'shake', 'smoothie', 'slush', 'waffle', 'sherbet', 'sorbet', 'yogurt', 'gelato')
type_words = word_freq %>%
filter(word %in% type) %>%
pivot_wider(names_from=word,values_from=count, values_fill = 0)
freq_types = as.matrix(colSums(type_words[, -1]))
names(freq_types) = type
dev.new(width = 1000, height = 1000, unit = "px")
types = word_freq %>% filter(word %in% type)
types %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram() + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types%>%ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density)))+    scale_fill_viridis(discrete=TRUE) +
scale_color_viridis(discrete=TRUE) +theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types%>%ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density))) +
scale_color_viridis(discrete=TRUE) +theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types%>%ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density))) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
dev.new(width = 1000, height = 1000, unit = "px")
review%>%ggplot(aes(x=stars))+geom_histogram(aes(y = stat(density)))
review%>%ggplot(aes(x=stars))+geom_histogram(aes(y = ..density..))
review%>%ggplot(aes(x=stars))+geom_histogram(aes(y = after_stat(density)))
review%>%ggplot(aes(x=stars))+geom_histogram(aes(y = after_stat(density)))
review%>%ggplot(aes(x=stars))+geom_histogram(aes(y = ..ncount..))
review%>%ggplot(aes(x=stars))+geom_histogram(aes(y = ..count../sum(..count..)))
dev.new(width = 1000, height = 1000, unit = "px")
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram(aes(y = ..count../sum(..count..))) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types = word_freq %>% filter(word %in% type)
dev.new(width = 1000, height = 1000, unit = "px")
types%>%ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = ..count../sum(..count..))) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
View(types)
types%>%ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = ..density../sum(..density..))) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
View(types)
dev.new(width = 1000, height = 1000, unit = "px")
types%>%ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = ..density..)) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
View(review)
types%>%ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density))) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) +xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types%>%ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density) * 30)) +
scale_y_continuous(labels = percent ) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
install.packages("tidyverse")
library(tidyverse)
types%>%ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density) * 30)) +
scale_y_continuous(labels = percent) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
library("rjson")
library(dplyr)
library(tidytext)
library(tidyr)
library("tm")
library("SnowballC")
library("wordcloud")
library(ggplot2)
library(tidyverse)
types %>% ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density) * 30)) +
scale_y_continuous(labels = percent) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
install.packages("scales")
library(scales)
dev.new(width = 1000, height = 1000, unit = "px")
types %>% ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density) * 30)) +
scale_y_continuous(labels = percent) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types %>% ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density) * 5), binwidth = 5) +
scale_y_continuous(labels = percent) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types %>% ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density) * 5), binwidth = 2) +
scale_y_continuous(labels = percent) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types %>% ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density) * 2), binwidth = 2) +
scale_y_continuous(labels = percent) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types %>% ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density) * 2), binwidth = 0.5) +
scale_y_continuous(labels = percent) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
types %>% ggplot(aes(x=stars,color=word,fill=word))+geom_histogram(aes(y = stat(density) * 0.5), binwidth = 0.5) +
scale_y_continuous(labels = percent) +
theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
dev.new(width = 5000, height = 5000, unit = "px")
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram(aes(y = stat(density) * 0.5), binwidth = 0.5) +
cale_y_continuous(labels = percent) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram(aes(y = stat(density) * 0.5), binwidth = 0.5) +
scale_y_continuous(labels = percent) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
dev.new(width = 2000, height = 2000, unit = "px")
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram(aes(y = stat(density) * 0.5), binwidth = 0.5) +
scale_y_continuous(labels = percent) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
dev.new(width = 1000, height = 1000, unit = "px")
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram(aes(y = stat(density) * 0.5), binwidth = 0.5) +
scale_y_continuous(labels = percent) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
dev.new(width = 1000, height = 1000, unit = "px")
wordcloud(rownames(freq_flavors),
freq_flavors, min.freq =3, scale=c(5, .2),
random.order = FALSE,
random.color = TRUE)
View(freq_flavors)
View(freq_types)
freq_types = as.matrix(colSums(type_words[, -c(1:4)]))
View(freq_types)
freq_types = as.matrix(colSums(type_words[, -c(1)]))
View(freq_types)
freq_types = as.matrix(colSums(type_words[, -c(1:5)]))
View(freq_types)
freq_flavors = as.matrix(colSums(flavor_words[, -c(1:5)]))
dev.new(width = 1000, height = 1000, unit = "px")
flavors %>% ggplot(aes(x=stars,color=word,fill=word)) + geom_histogram(aes(y = stat(density) * 0.5), binwidth = 0.5) +
scale_y_continuous(labels = percent) + theme(
legend.position="none",
panel.spacing = unit(0.1, "lines"),
strip.text.x = element_text(size = 8)
) + xlab("") +
ylab("Proportion ") +
facet_wrap(~word)
wordcloud(rownames(freq_flavors),
freq_flavors, min.freq =3, scale=c(5, .2),
random.order = FALSE,
random.color = TRUE)
?wordcloud
wordcloud(rownames(freq_flavors),
freq_flavors, min.freq =3, scale=c(10, .5),
random.order = FALSE,
random.color = TRUE)
dev.new(width = 1000, height = 1000, unit = "px")
wordcloud(rownames(freq_types),
freq_types, min.freq =3, scale=c(10, .5),
random.order = FALSE,
random.color = TRUE)
wordcloud(rownames(freq_types),
freq_types, min.freq =3, scale=c(8, .5),
random.order = FALSE,
random.color = TRUE)
wordcloud(rownames(freq_types),
freq_types, min.freq =3, scale=c(5, .5),
random.order = FALSE,
random.color = TRUE)
wordcloud(rownames(freq_types),
freq_types, min.freq =3, scale=c(10, .5),
random.order = FALSE,
random.color = TRUE)
